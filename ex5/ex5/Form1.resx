<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnRefresh.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA1hJREFUaEPd2NuLVXUYxnFHBy08hFIhqIEH8A8RVMRGUSlDytOtlyKClx7whDd6
        JRKEN4KgRqihWCJoWiGm4hHxkCJ6EZWkaBfj95HZ8rh8ZmavvZcblg98bt6ZeX/vb2bWXmv9hvT29r4X
        YrGOYrGOYrGOYrGOYrGOYrGOYrGOYtG1kI/xObbjAH7ucxA7MB+fokx60mwuFl2JLIIGfwr94ECe4Xt8
        icGyE4/TbC4WXRPpwe/wQcu4gAVIWQN9z/k0m4tFN0BGYC8aA7VrH0aikcYm5ESazcWi6ycTcRGNhYr+
        ga6LXdiA9dC/yE/4F+ln5AomYbnV5GSazcWiCxmPP+ELNZzGCnyE/qKvrcQZpB5/h1rlG+nGTfgior/A
        1ygbbeg/FPsVVb6R7+ALyGVMRauZhuMo9nWVbmQGvLlcwxi0m3Uo9naVbuQqvPkTlL2xpayF900q28gc
        eGNZjHbTzCakso3oLuyN/0C78fvEYCrZyGgUHzuWoZ2shvcbTCUbmWUNRZtq5wLfDO/XjEoeUbZZQzmJ
        VtKFVVAP3VDvNOE2/sKhNJuLRUeOoLEJ2YNWoo1MxjgMhW6ugxkGPX8NT7O5WHTkF/hGNqHjSbO5WHTk
        rPqYjeh40mwuFh35UX3MbnQ8aTYXi47o9dQ3cgIdT5rNxaIjc9XH6Gl1FDqZ7jSbi0VH9P7wHL6Zr/Cu
        MhN6ctCHzDn8hk/SbC4WXV8Owzeid/R3lV/ha+kJuyvN5mLR9WUevLmoVnX01yiu8wXibC4WneUWfAHd
        cceiquiZ7hF8jfvQzTPO5mLRWWbDF5FL0GlKu9GwuhaK/XWY9yppNheLrpD98IXkPCag1ejlrHjTlR/w
        Omk2F4uukA9xF76gPMRClI0O9+6h2O8B9K/2Omk2F4su5DM8hi/coEMEXZzacH/5ADpZLD6MNujam4I3
        kmZzsej6iU5NbsAHcNqo3iq3Qm+CsgU6Gy5e0E6P7dPxVtJsLhbdANGNUifsPkg7dE3oJD8mzeZi0TUR
        najrqNOHKuM6lmDApNlcLLoSWYpjeAEfNPkfOgfWSWNTSbO5WHQtRB/F+g3rTVIX9Kk+R/EtvoE+MEol
        zeZisY5isY5isY5isY5isY5isY5isY5isX56h7wEcWBYmqhqXlEAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>